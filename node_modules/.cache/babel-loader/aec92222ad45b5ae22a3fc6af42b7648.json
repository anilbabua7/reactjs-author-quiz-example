{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personal\\\\WorkBook\\\\ReactJs\\\\author-quiz\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport * as serviceWorker from './serviceWorker';\nimport { shuffle, sample } from 'underscore';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport AddAuthor from './AddAuthor';\nconst authors = [{\n  name: 'Anilbabu Srikakulapu',\n  imageUrl: 'images/authors/microsoft.jpg',\n  imageSource: 'Local',\n  books: ['Overcome disappointmenst', 'God has got your back', 'You are more than a conqueror']\n}, {\n  name: 'Ravi Zachariahs',\n  imageUrl: 'images/authors/microsoft1.jpg',\n  imageSource: 'Local',\n  books: ['Why Suffering?', 'Imaginary Conversation', 'Is God Dead?']\n}, {\n  name: 'Nabeel Quereshi',\n  imageUrl: 'images/authors/microsoft2.jpg',\n  imageSource: 'Local',\n  books: ['Jesus among other gods', 'Why I believe Jesus', 'Muslim turning to Christ']\n}];\nconst state = {\n  turnData: getTurnData(authors),\n  highlight: 'none'\n};\n\nfunction getTurnData(authors) {\n  const allbooks = authors.reduce(function (p, c, i) {\n    return p.concat(c.books);\n  }, []);\n  const fourRandomBooks = shuffle(allbooks).slice(0, 4);\n  const answer = sample(fourRandomBooks);\n  return {\n    books: fourRandomBooks,\n    author: authors.find(author => author.books.some(title => title === answer))\n  };\n}\n\nfunction answerSelected(answer) {\n  const isCorrect = state.turnData.author.books.some(book => book === answer);\n  state.highlight = isCorrect ? 'correct' : 'wrong';\n  console.log(answer);\n  render();\n}\n\nfunction App() {\n  return React.createElement(AuthorQuiz, Object.assign({}, state, {\n    answerSelected: answerSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n}\n\nconst AddAuthorForm = withRouter(({\n  history\n}) => React.createElement(AddAuthor, {\n  onAddAuthor: author => {\n    authors.push(author);\n    console.log(authors);\n    history.push('/');\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}));\n\nfunction render() {\n  ReactDOM.render(React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: App,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/addAuthor\",\n    component: AddAuthorForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), document.getElementById('root'));\n}\n\nrender(); //ReactDOM.render(<Home />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["E:\\Personal\\WorkBook\\ReactJs\\author-quiz\\src\\index.js"],"names":["React","ReactDOM","AuthorQuiz","serviceWorker","shuffle","sample","BrowserRouter","Router","Route","Link","withRouter","AddAuthor","authors","name","imageUrl","imageSource","books","state","turnData","getTurnData","highlight","allbooks","reduce","p","c","i","concat","fourRandomBooks","slice","answer","author","find","some","title","answerSelected","isCorrect","book","console","log","render","App","AddAuthorForm","history","push","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport * as serviceWorker from './serviceWorker';\nimport { shuffle, sample } from 'underscore'\nimport {BrowserRouter as Router, Route, Link, withRouter} from 'react-router-dom'\nimport AddAuthor from './AddAuthor'\n\nconst authors = [\n    {\n        name: 'Anilbabu Srikakulapu',\n        imageUrl: 'images/authors/microsoft.jpg',\n        imageSource: 'Local',\n        books: ['Overcome disappointmenst', 'God has got your back', 'You are more than a conqueror']\n    },\n    {\n        name: 'Ravi Zachariahs',\n        imageUrl: 'images/authors/microsoft1.jpg',\n        imageSource: 'Local',\n        books: ['Why Suffering?', 'Imaginary Conversation', 'Is God Dead?']\n    },\n    {\n        name: 'Nabeel Quereshi',\n        imageUrl: 'images/authors/microsoft2.jpg',\n        imageSource: 'Local',\n        books: ['Jesus among other gods', 'Why I believe Jesus', 'Muslim turning to Christ']\n    }\n];\n\nconst state = {\n    turnData: getTurnData(authors),\n    highlight: 'none'\n}\n\nfunction getTurnData(authors) {\n    const allbooks = authors.reduce(function (p, c, i) {\n        return p.concat(c.books);\n    }, []);\n    const fourRandomBooks = shuffle(allbooks).slice(0, 4);\n    const answer = sample(fourRandomBooks);\n\n    return {\n        books: fourRandomBooks,\n        author: authors.find((author) =>\n            author.books.some((title) => title === answer)\n        )\n    }\n}\n\nfunction answerSelected(answer) {\n    const isCorrect = state.turnData.author.books.some((book) => book === answer);\n    state.highlight = isCorrect ? 'correct' : 'wrong';\n   console.log(answer);\n    render();\n}\n\nfunction App(){\n    return <AuthorQuiz {...state} answerSelected={answerSelected} />;\n}\n\nconst  AddAuthorForm = withRouter( ({history}) =>\n     <AddAuthor onAddAuthor={(author) =>{\n        authors.push(author);\n        console.log(authors);\n        history.push('/');\n    }} />\n);\n\nfunction render() {\n    ReactDOM.render(\n    <Router>\n         <Route exact path=\"/\" component={App} />\n         <Route path=\"/addAuthor\" component={AddAuthorForm} />\n    </Router>\n   , document.getElementById('root'));\n}\nrender();\n\n//ReactDOM.render(<Home />, document.getElementById('root'));\n\n \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}