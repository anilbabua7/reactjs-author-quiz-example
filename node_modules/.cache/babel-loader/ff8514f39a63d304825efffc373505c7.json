{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personal\\\\WorkBook\\\\ReactJs\\\\author-quiz\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport * as serviceWorker from './serviceWorker';\nimport Sum from './Add';\nimport Clicker from './clicker';\nimport { shuffle, sample } from 'underscore';\nimport { stat } from 'fs';\nimport { InputExample } from './input-example';\nimport { Home, Order, Profile, Contact } from './router-example';\nimport Router from 'react-router';\nimport Route from 'react-router-dom';\nimport browserHistory from 'react-router';\nconst authors = [{\n  name: 'Anilbabu Srikakulapu',\n  imageUrl: 'images/authors/microsoft.jpg',\n  imageSource: 'Local',\n  books: ['Overcome disappointmenst', 'God has got your back', 'You are more than a conqueror']\n}, {\n  name: 'Ravi Zachariahs',\n  imageUrl: 'images/authors/microsoft1.jpg',\n  imageSource: 'Local',\n  books: ['Why Suffering?', 'Imaginary Conversation', 'Is God Dead?']\n}, {\n  name: 'Nabeel Quereshi',\n  imageUrl: 'images/authors/microsoft2.jpg',\n  imageSource: 'Local',\n  books: ['Jesus among other gods', 'Why I believe Jesus', 'Muslim turning to Christ']\n}];\nconst state = {\n  turnData: getTurnData(authors),\n  highlight: 'none'\n};\n\nfunction getTurnData(authors) {\n  const allbooks = authors.reduce(function (p, c, i) {\n    return p.concat(c.books);\n  }, []);\n  const fourRandomBooks = shuffle(allbooks).slice(0, 4);\n  const answer = sample(fourRandomBooks);\n  return {\n    books: fourRandomBooks,\n    author: authors.find(author => author.books.some(title => title === answer))\n  };\n}\n\nfunction answerSelected(answer) {\n  const isCorrect = state.turnData.author.books.some(book => book === answer);\n  state.highlight = isCorrect ? 'correct' : 'wrong'; // console.log(answer);\n  //render();\n} //function render() {\n//  ReactDOM.render(<AuthorQuiz {...state} answerSelected={answerSelected} />, document.getElementById('root'));\n//}\n//render();\n\n\nReactDOM.render(React.createElement(Router, {\n  history: browserHistory,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/\",\n  component: Home,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"order\",\n  component: Order,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"profile\",\n  component: Profile,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"contact\",\n  component: Contact,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["E:\\Personal\\WorkBook\\ReactJs\\author-quiz\\src\\index.js"],"names":["React","ReactDOM","AuthorQuiz","serviceWorker","Sum","Clicker","shuffle","sample","stat","InputExample","Home","Order","Profile","Contact","Router","Route","browserHistory","authors","name","imageUrl","imageSource","books","state","turnData","getTurnData","highlight","allbooks","reduce","p","c","i","concat","fourRandomBooks","slice","answer","author","find","some","title","answerSelected","isCorrect","book","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,YAAhC;AACA,SAASC,IAAT,QAAqB,IAArB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,OAArB,EAA8BC,OAA9B,QAA4C,kBAA5C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,cAAP,MAA2B,cAA3B;AAEA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,IAAI,EAAE,sBADV;AAEIC,EAAAA,QAAQ,EAAE,8BAFd;AAGIC,EAAAA,WAAW,EAAE,OAHjB;AAIIC,EAAAA,KAAK,EAAE,CAAC,0BAAD,EAA6B,uBAA7B,EAAsD,+BAAtD;AAJX,CADY,EAOZ;AACIH,EAAAA,IAAI,EAAE,iBADV;AAEIC,EAAAA,QAAQ,EAAE,+BAFd;AAGIC,EAAAA,WAAW,EAAE,OAHjB;AAIIC,EAAAA,KAAK,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,EAA6C,cAA7C;AAJX,CAPY,EAaZ;AACIH,EAAAA,IAAI,EAAE,iBADV;AAEIC,EAAAA,QAAQ,EAAE,+BAFd;AAGIC,EAAAA,WAAW,EAAE,OAHjB;AAIIC,EAAAA,KAAK,EAAE,CAAC,wBAAD,EAA2B,qBAA3B,EAAkD,0BAAlD;AAJX,CAbY,CAAhB;AAqBA,MAAMC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAEC,WAAW,CAACP,OAAD,CADX;AAEVQ,EAAAA,SAAS,EAAE;AAFD,CAAd;;AAKA,SAASD,WAAT,CAAqBP,OAArB,EAA8B;AAC1B,QAAMS,QAAQ,GAAGT,OAAO,CAACU,MAAR,CAAe,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AAC/C,WAAOF,CAAC,CAACG,MAAF,CAASF,CAAC,CAACR,KAAX,CAAP;AACH,GAFgB,EAEd,EAFc,CAAjB;AAGA,QAAMW,eAAe,GAAG1B,OAAO,CAACoB,QAAD,CAAP,CAAkBO,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B,CAAxB;AACA,QAAMC,MAAM,GAAG3B,MAAM,CAACyB,eAAD,CAArB;AAEA,SAAO;AACHX,IAAAA,KAAK,EAAEW,eADJ;AAEHG,IAAAA,MAAM,EAAElB,OAAO,CAACmB,IAAR,CAAcD,MAAD,IACjBA,MAAM,CAACd,KAAP,CAAagB,IAAb,CAAmBC,KAAD,IAAWA,KAAK,KAAKJ,MAAvC,CADI;AAFL,GAAP;AAMH;;AAED,SAASK,cAAT,CAAwBL,MAAxB,EAAgC;AAC5B,QAAMM,SAAS,GAAGlB,KAAK,CAACC,QAAN,CAAeY,MAAf,CAAsBd,KAAtB,CAA4BgB,IAA5B,CAAkCI,IAAD,IAAUA,IAAI,KAAKP,MAApD,CAAlB;AACAZ,EAAAA,KAAK,CAACG,SAAN,GAAkBe,SAAS,GAAG,SAAH,GAAe,OAA1C,CAF4B,CAG7B;AACC;AACH,C,CACD;AACE;AACF;AACA;;;AAEAvC,QAAQ,CAACyC,MAAT,CAAgB,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAE1B,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACR,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAgB,EAAA,SAAS,EAAEN,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,OAAlB;AAA0B,EAAA,SAAS,EAAEC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,SAAlB;AAA4B,EAAA,SAAS,EAAEC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAc,EAAA,IAAI,EAAC,SAAnB;AAA6B,EAAA,SAAS,EAAEC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,CADQ,CAAhB,EAMe8B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANf,E,CAUA;AACA;AACA;;AACAzC,aAAa,CAAC0C,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport * as serviceWorker from './serviceWorker';\nimport Sum from './Add'\nimport Clicker from './clicker'\nimport { shuffle, sample } from 'underscore'\nimport { stat } from 'fs';\nimport {InputExample} from './input-example'\nimport {Home, Order, Profile, Contact} from './router-example'\nimport Router from 'react-router'\nimport Route from 'react-router-dom'\nimport browserHistory from 'react-router'\n\nconst authors = [\n    {\n        name: 'Anilbabu Srikakulapu',\n        imageUrl: 'images/authors/microsoft.jpg',\n        imageSource: 'Local',\n        books: ['Overcome disappointmenst', 'God has got your back', 'You are more than a conqueror']\n    },\n    {\n        name: 'Ravi Zachariahs',\n        imageUrl: 'images/authors/microsoft1.jpg',\n        imageSource: 'Local',\n        books: ['Why Suffering?', 'Imaginary Conversation', 'Is God Dead?']\n    },\n    {\n        name: 'Nabeel Quereshi',\n        imageUrl: 'images/authors/microsoft2.jpg',\n        imageSource: 'Local',\n        books: ['Jesus among other gods', 'Why I believe Jesus', 'Muslim turning to Christ']\n    }\n];\n\nconst state = {\n    turnData: getTurnData(authors),\n    highlight: 'none'\n}\n\nfunction getTurnData(authors) {\n    const allbooks = authors.reduce(function (p, c, i) {\n        return p.concat(c.books);\n    }, []);\n    const fourRandomBooks = shuffle(allbooks).slice(0, 4);\n    const answer = sample(fourRandomBooks);\n\n    return {\n        books: fourRandomBooks,\n        author: authors.find((author) =>\n            author.books.some((title) => title === answer)\n        )\n    }\n}\n\nfunction answerSelected(answer) {\n    const isCorrect = state.turnData.author.books.some((book) => book === answer);\n    state.highlight = isCorrect ? 'correct' : 'wrong';\n   // console.log(answer);\n    //render();\n}\n//function render() {\n  //  ReactDOM.render(<AuthorQuiz {...state} answerSelected={answerSelected} />, document.getElementById('root'));\n//}\n//render();\n\nReactDOM.render(<Router history={browserHistory}>\n        <Route path=\"/\" component={Home}>\n            <Route exact path=\"order\" component={Order}></Route>\n            <Route exact path=\"profile\" component={Profile}></Route>\n            <Route exact  path=\"contact\" component={Contact}></Route>\n        </Route>\n    </Router>, document.getElementById('root'));\n\n \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}